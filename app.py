import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px
import plotly.graph_objects as go
from matplotlib import cm
from matplotlib.colors import ListedColormap
import warnings
warnings.filterwarnings("ignore")

st.set_page_config(page_title="An√°lisis y Optimizaci√≥n de Campa√±as de Marketing", layout="wide")

# Title and divider
st.title("An√°lisis y Optimizaci√≥n de Campa√±as de Marketing")
st.markdown("---")

# --- Sidebar Navigation ---
st.sidebar.image("logo upgrade.png", width=100)
st.sidebar.title("Navegaci√≥n")
section = st.sidebar.radio(
    "Seleccione una secci√≥n",
    ("Introducci√≥n", "Preprocesamiento", "An√°lisis Exploratorio (EDA)", "Insights y Recomendaciones")
)


# --- Load Data ---
@st.cache_data
def load_data():
    try:
        df = pd.read_csv("limpio_marketingcampaigns.csv")
        # Convertir columnas para an√°lisis
        df['inversi√≥n_num'] = df['inversi√≥n'].str.replace('.', '', regex=False).str.replace(',', '.', regex=False).astype(float)
        df['facturaci√≥n_num'] = df['facturaci√≥n'].str.replace('.', '', regex=False).str.replace(',', '.', regex=False).astype(float)
        df['roi_num'] = df['retorno inversi√≥n'].str.replace('.', '', regex=False).str.replace(',', '.', regex=False).astype(float)
        df['ratio_conv_num'] = df['ratio conversi√≥n'].str.replace('.', '', regex=False).str.replace(',', '.', regex=False).astype(float)
        df['duracion_num'] = pd.to_numeric(df['duraci√≥n d√≠as'], errors='coerce')
        df['beneficio_neto_num'] = df['beneficio neto'].str.replace('.', '', regex=False).str.replace(',', '.', regex=False).astype(float)
        df['fecha inicio'] = pd.to_datetime(df['fecha inicio'], errors='coerce')
        df['mes'] = df['fecha inicio'].dt.month
        return df
    except Exception as e:
        st.error(f"Error cargando los datos: {e}")
        # Crear DataFrame vac√≠o para evitar errores
        return pd.DataFrame()

df = load_data()

# --- Introducci√≥n ---
if section == "Introducci√≥n":
    # Custom CSS for consistent styling
    st.markdown("""
    <style>
    /* General styles */
    .section-title {
        font-size: 2.5em;
        color: #1f77b4;
        text-align: center;
        margin: 2em 0 1em 0;
        padding-bottom: 0.5em;
        border-bottom: 3px solid #ddd;  /* Increased border thickness */
    }
    
    .card {
        background-color: white;
        padding: 1.5em;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.2);  /* Increased shadow */
        margin: 1em 0;
        transition: transform 0.3s ease;
        border: 1px solid #e0e0e0;  /* Added border */
    }
    
    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 16px rgba(0,0,0,0.25);  /* Increased hover shadow */
    }
    
    .metric-card {
        background-color: #f8f9fa;  /* Light background */
        padding: 1.5em;
        border-radius: 10px;
        text-align: center;
        border-left: 6px solid #1f77b4;  /* Thicker accent border */
        margin: 0.5em;
        box-shadow: 0 3px 8px rgba(0,0,0,0.15);  /* Added shadow */
    }
    
    .metric-value {
        font-size: 2em;
        font-weight: bold;
        color: #0d6efd;  /* Brighter blue */
        margin: 0.2em 0;
    }
    
    .metric-label {
        color: #343a40;  /* Darker text */
        font-size: 1em;
        font-weight: 500;  /* Semi-bold */
    }
    
    .process-step {
        background-color: white;
        padding: 1.2em;
        border-radius: 8px;
        margin: 0.5em 0;
        display: flex;
        align-items: center;
        box-shadow: 0 3px 6px rgba(0,0,0,0.1);  /* Increased shadow */
        border: 1px solid #dee2e6;  /* Added border */
    }
    
    /* Animations */
    @keyframes fadeIn {
        from {opacity: 0;}
        to {opacity: 1;}
    }
    
    .animated {
        animation: fadeIn 1s ease;
    }
    </style>
    """, unsafe_allow_html=True)

    # Project Objectives Section
    st.markdown('<h1 class="section-title animated">üéØ Objetivos del Proyecto</h1>', unsafe_allow_html=True)
    
    col1, col2 = st.columns(2)
    
    objectives = [
        {"icon": "üìä", "title": "Identificar Canales √ìptimos", "desc": "An√°lisis de eficiencia por canal y tipo de campa√±a"},
        {"icon": "üí∞", "title": "Optimizar Presupuestos", "desc": "Maximizaci√≥n del ROI en cada campa√±a"},
        {"icon": "üìà", "title": "Detectar Estacionalidad", "desc": "Identificaci√≥n de patrones temporales"},
        {"icon": "üí°", "title": "Generar Recomendaciones", "desc": "Estrategias basadas en datos"}
    ]
    
    for i, obj in enumerate(objectives):
        with col1 if i < 2 else col2:
            st.markdown(f"""
            <div class="card animated">
                <h3>{obj['icon']} {obj['title']}</h3>
                <p>{obj['desc']}</p>
            </div>
            """, unsafe_allow_html=True)

    # Methodology Section
    st.markdown('<h1 class="section-title animated">üõ†Ô∏è Metodolog√≠a</h1>', unsafe_allow_html=True)
    
    tabs = st.tabs(["üíª Herramientas", "üìù Proceso", "‚ö° T√©cnicas"])
    
    with tabs[0]:
        col1, col2, col3, col4 = st.columns(4)
        tools = [
            {"icon": "üêç", "name": "Python", "desc": "An√°lisis de datos"},
            {"icon": "üìä", "name": "Pandas", "desc": "Manipulaci√≥n de datos"},
            {"icon": "üíª", "name": "VS Code", "desc": "Desarrollo"},
            {"icon": "üìà", "name": "Power BI", "desc": "Visualizaci√≥n"}
        ]
        
        for col, tool in zip([col1, col2, col3, col4], tools):
            with col:
                st.markdown(f"""
                <div class="metric-card">
                    <div style="font-size: 2em">{tool['icon']}</div>
                    <div class="metric-value">{tool['name']}</div>
                    <div class="metric-label">{tool['desc']}</div>
                </div>
                """, unsafe_allow_html=True)
    
    with tabs[1]:
        process_steps = [
            {"icon": "üîç", "step": "Exploraci√≥n inicial", "desc": "An√°lisis preliminar"},
            {"icon": "üßπ", "step": "Limpieza", "desc": "Preparaci√≥n de datos"},
            {"icon": "üìä", "step": "An√°lisis", "desc": "Identificaci√≥n de patrones"},
            {"icon": "üìà", "step": "Visualizaci√≥n", "desc": "Creaci√≥n de dashboards"},
            {"icon": "üí°", "step": "Insights", "desc": "Conclusiones"}
        ]
        
        for step in process_steps:
            st.markdown(f"""
            <div class="process-step">
                <div style="font-size: 1.5em; margin-right: 1em">{step['icon']}</div>
                <div>
                    <h4 style="margin: 0">{step['step']}</h4>
                    <p style="margin: 0; color: #666">{step['desc']}</p>
                </div>
            </div>
            """, unsafe_allow_html=True)

    with tabs[2]:
        col1, col2 = st.columns(2)
        techniques = [
            {"icon": "üìä", "name": "An√°lisis Estad√≠stico"},
            {"icon": "üìà", "name": "Visualizaci√≥n Avanzada"},
            {"icon": "üîç", "name": "Detecci√≥n de Patrones"},
            {"icon": "üîó", "name": "An√°lisis de Correlaciones"},
            {"icon": "ü§ñ", "name": "Machine Learning B√°sico"}
        ]
        
        for i, tech in enumerate(techniques):
            with col1 if i % 2 == 0 else col2:
                st.markdown(f"""
                <div class="card">
                    <div style="display: flex; align-items: center">
                        <span style="font-size: 1.5em; margin-right: 0.5em">{tech['icon']}</span>
                        <span>{tech['name']}</span>
                    </div>
                </div>
                """, unsafe_allow_html=True)

# --- Preprocesamiento ---
elif section == "Preprocesamiento":
    # Custom CSS para mantener consistencia con la secci√≥n de introducci√≥n
    st.markdown("""
    <style>
    .data-card {
        background-color: white;
        padding: 1.5em;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.2);
        margin: 1em 0;
        border: 1px solid #e0e0e0;
    }
    
    .metric-container {
        background-color: #f8f9fa;
        padding: 1.2em;
        border-radius: 8px;
        text-align: center;
        border-left: 6px solid #1f77b4;
        margin: 0.5em;
        box-shadow: 0 3px 8px rgba(0,0,0,0.15);
    }
    
    .step-container {
        background-color: white;
        padding: 1em;
        border-radius: 8px;
        margin: 0.5em 0;
        border: 1px solid #dee2e6;
        transition: transform 0.3s ease;
    }
    
    .step-container:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 16px rgba(0,0,0,0.25);
    }
    
    .code-container {
        background-color: #f8f9fa;
        padding: 1em;
        border-radius: 8px;
        margin: 1em 0;
        border-left: 4px solid #28a745;
    }
    </style>
    """, unsafe_allow_html=True)

    st.markdown('<h1 style="text-align: center; color: black;">Preprocesamiento y Limpieza de Datos</h1>', unsafe_allow_html=True)
    
    # M√©tricas principales
    col1, col2, col3, col4 = st.columns(4)
    with col1:
        st.markdown("""
        <div class="metric-container">
            <h3>üìä Registros</h3>
            <h2>1,000</h2>
            <p>Campa√±as totales</p>
        </div>
        """, unsafe_allow_html=True)
    with col2:
        st.markdown("""
        <div class="metric-container">
            <h3>üßπ Limpieza</h3>
            <h2>100%</h2>
            <p>Datos v√°lidos</p>
        </div>
        """, unsafe_allow_html=True)
    with col3:
        st.markdown("""
        <div class="metric-container">
            <h3>üìà Variables</h3>
            <h2>15</h2>
            <p>Campos finales</p>
        </div>
        """, unsafe_allow_html=True)
    with col4:
        st.markdown("""
        <div class="metric-container">
            <h3>‚ö° Enriquecimiento</h3>
            <h2>6</h2>
            <p>Nuevas m√©tricas</p>
        </div>
        """, unsafe_allow_html=True)

    # Tabs para organizar el contenido
    tab1, tab2, tab3, tab4, tab5 = st.tabs(["üîç Inspecci√≥n", "üßπ Limpieza", "üìä Normalizaci√≥n", "üí´ Enriquecimiento", "‚úÖ Resultado"])
    
    with tab1:
        st.markdown("""
        <div class="data-card">
            <h3>üîç Inspecci√≥n Inicial del Dataset</h3>
            <p>Proceso sistem√°tico de revisi√≥n de la calidad y estructura de los datos.</p>
        </div>
        """, unsafe_allow_html=True)
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("""
            <div class="step-container">
                <h4>üìã Dimensiones Detectadas</h4>
                <ul>
                    <li>1000 filas (campa√±as)</li>
                    <li>10 columnas (variables)</li>
                    <li>12 duplicados identificados</li>
                </ul>
            </div>
            """, unsafe_allow_html=True)
            
        with col2:
            st.markdown("""
            <div class="step-container">
                <h4>‚ö†Ô∏è Problemas Detectados</h4>
                <ul>
                    <li>42 fechas fin faltantes</li>
                    <li>38 valores ROI ausentes</li>
                    <li>35 tasas conversi√≥n nulas</li>
                </ul>
            </div>
            """, unsafe_allow_html=True)


    with tab2:
        st.markdown("""
        <div class="data-card">
            <h3>üßπ Proceso de Limpieza</h3>
            <p>Tratamiento sistem√°tico de valores nulos, duplicados y anomal√≠as.</p>
        </div>
        """, unsafe_allow_html=True)
        
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("""
            <div class="step-container">
                <h4>üìä Datos Num√©ricos</h4>
                <ul>
                    <li>Imputaci√≥n por mediana</li>
                    <li>Eliminaci√≥n valores negativos</li>
                    <li>Correcci√≥n formatos decimales</li>
                </ul>
            </div>
            """, unsafe_allow_html=True)
            
        with col2:
            st.markdown("""
            <div class="step-container">
                <h4>üìù Datos Categ√≥ricos</h4>
                <ul>
                    <li>Etiqueta "sin datos" para nulos</li>
                    <li>Normalizaci√≥n de categor√≠as</li>
                    <li>Correcci√≥n de errores tipogr√°ficos</li>
                </ul>
            </div>
            """, unsafe_allow_html=True)
        

    with tab3:
        st.markdown("""
        <div class="data-card">
            <h3>üìä Normalizaci√≥n de Datos</h3>
            <p>Estandarizaci√≥n de formatos y unidades para an√°lisis consistente.</p>
        </div>
        """, unsafe_allow_html=True)
        
        # Ejemplos de normalizaci√≥n
        col1, col2, col3 = st.columns(3)
        
        with col1:
            st.markdown("""
            <div class="step-container">
            <h4>üóìÔ∏è Fechas</h4>
            <code>01/01/2024</code> ‚Üí <code>2024-01-01</code>
            <br>
            <code>1-ene-24</code> ‚Üí <code>2024-01-01</code>
            <br>
            <code>2024.01.01</code> ‚Üí <code>2024-01-01</code>
            <br>
            <code>01 enero 2024</code> ‚Üí <code>2024-01-01</code>
            </div>
            """, unsafe_allow_html=True)
            
        with col2:
            st.markdown("""
            <div class="step-container">
            <h4>üí∂ Valores Monetarios</h4>
            <code>1000.50</code> ‚Üí <code>1.000,50</code>
            <br>
            <code>1,000.50</code> ‚Üí <code>1.000,50</code>
            <br>
            <code>1000,5</code> ‚Üí <code>1.000,50</code>
            <br>
            <code>1.000,5‚Ç¨</code> ‚Üí <code>1.000,50</code>
            </div>
            """, unsafe_allow_html=True)

        with col3:
            st.markdown("""
            <div class="step-container">
            <h4>üìä Porcentajes</h4>
            <code>50%</code> ‚Üí <code>0.50</code>
            <br>
            <code>0,5</code> ‚Üí <code>0.50</code>
            <br>
            <code>50.0%</code> ‚Üí <code>0.50</code>
            <br>
            <code>50,00%</code> ‚Üí <code>0.50</code>
            </div>
            """, unsafe_allow_html=True)

    with tab4:
        st.markdown("""
        <div class="data-card">
            <h3>üí´ Enriquecimiento de Datos</h3>
            <p>Creaci√≥n de nuevas variables y m√©tricas derivadas para an√°lisis profundo.</p>
        </div>
        """, unsafe_allow_html=True)
        
        # Variables derivadas
        col1, col2, col3 = st.columns(3)
        
        with col1:
            st.markdown("""
            <div class="step-container">
                <h4>‚è±Ô∏è Temporales</h4>
                <ul>
                    <li>Duraci√≥n en d√≠as</li>
                    <li>Categor√≠a duraci√≥n</li>
                    <li>Mes de inicio</li>
                </ul>
            </div>
            """, unsafe_allow_html=True)
            
        with col2:
            st.markdown("""
            <div class="step-container">
                <h4>üí∞ Financieras</h4>
                <ul>
                    <li>Beneficio neto</li>
                    <li>ROI ajustado</li>
                    <li>Categor√≠a inversi√≥n</li>
                </ul>
            </div>
            """, unsafe_allow_html=True)
            
        with col3:
            st.markdown("""
            <div class="step-container">
                <h4>üìà Rendimiento</h4>
                <ul>
                    <li>√âxito campa√±a</li>
                    <li>Eficiencia relativa</li>
                    <li>Score conversi√≥n</li>
                </ul>
            </div>
            """, unsafe_allow_html=True)

    with tab5:
        st.markdown("""
        <div class="data-card">
            <h3>‚úÖ Resultado Final</h3>
            <p>Dataset limpio y enriquecido listo para an√°lisis exploratorio.</p>
        </div>
        """, unsafe_allow_html=True)
        
        # M√©tricas finales
        col1, col2 = st.columns(2)
        
        with col1:
            st.markdown("""
            <div class="step-container">
                <h4>üìä Estad√≠sticas Finales</h4>
                <ul>
                    <li>988 registros √∫nicos</li>
                    <li>15 variables totales</li>
                    <li>0 valores nulos</li>
                    <li>100% datos v√°lidos</li>
                </ul>
            </div>
            """, unsafe_allow_html=True)
            
        with col2:
            st.markdown("""
            <div class="step-container">
                <h4>üéØ Mejoras Implementadas</h4>
                <ul>
                    <li>6 nuevas m√©tricas derivadas</li>
                    <li>Formatos estandarizados</li>
                    <li>Categorizaci√≥n completa</li>
                    <li>Documentaci√≥n detallada</li>
                </ul>
            </div>
            """, unsafe_allow_html=True)
        
        # Vista previa del dataset
        st.markdown("<h4 style='text-align: center;'>Vista Previa del Dataset Final</h4>", unsafe_allow_html=True)
        st.dataframe(df.head())

# --- EDA ---
elif section == "An√°lisis Exploratorio (EDA)":
    st.markdown("""
    <style>
    .data-card {
        background-color: white;
        padding: 1.5em;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.2);
        margin: 1em 0;
        border: 1px solid #e0e0e0;
    }
    </style>
    """, unsafe_allow_html=True)

    # Create tabs for different analyses
    tab1, tab2, tab3, tab4 = st.tabs(["Canales de Marketing", "Tipos de campa√±a", "Rendimiento y ROI", "Patrones Temporales"])

    with tab1:
        st.markdown("""
        <div class="data-card">
            <h3>1. An√°lisis por Canal de Marketing</h3>
            <p>Exploraci√≥n detallada del rendimiento y distribuci√≥n de canales de marketing.</p>
        </div>
        """, unsafe_allow_html=True)
        
        col1, col2 = st.columns(2)
        
        with col1:
            # Distribuci√≥n de campa√±as por canal
            channel_counts = df['canal'].value_counts()
            fig_channel_dist = px.pie(values=channel_counts.values, 
                        names=channel_counts.index, 
                        title='Distribuci√≥n de Campa√±as por Canal', 
                        hole=0.4)
            st.plotly_chart(fig_channel_dist, use_container_width=True)
            
            st.markdown("""
            <div style="background-color: #f8f9fa; padding: 15px; border-radius: 5px; border-left: 5px solid #1f77b4;">
            <strong>Insights de Distribuci√≥n:</strong>
            <ul>
                <li>El canal Promotion es ligeramente m√°s utilizado.</li>
                <li>Las empresas utilizan de forma equilibrada los diferentes canales de marketing, sin depender excesivamente de uno solo.</li>
            </ul>
            </div>
            """, unsafe_allow_html=True)
        
        with col2:
            # ROI promedio por canal
            channel_roi = df.groupby('canal')['roi_num'].mean().reset_index()
            fig_channel_roi = px.bar(channel_roi, 
                       x='canal', 
                       y='roi_num',
                       title='ROI Promedio por Canal',
                       color='canal')
            st.plotly_chart(fig_channel_roi, use_container_width=True)
            
            st.markdown("""
            <div style="background-color: #f8f9fa; padding: 15px; border-radius: 5px; border-left: 5px solid #1f77b4;">
            <strong>Insights de ROI:</strong>
            <ul>
                <li>Referral lidera en ROI (0.575)</li>
                <li>Promotion muestra ROI m√°s bajo pese a mayor uso</li>
                <li>Las diferencias de ROI entre canales no son significativas</li>
            </ul>
            </div>
            """, unsafe_allow_html=True)

    with tab2:
            # An√°lisis de Campa√±a
            st.markdown("""
            <div class="data-card">
                <h3>2. An√°lisis de Campa√±a</h3>
                <p>Evaluaci√≥n de ingresos y duraci√≥n por tipo de campa√±a.</p>
            </div>
            """, unsafe_allow_html=True)

            col1, col2 = st.columns(2)

            with col1:
                # Ingresos promedio por tipo de campa√±a
                df_filtered = df[~df['tipo'].isin(['B2B', 'sin datos'])]
                campaign_revenue = df_filtered.groupby('tipo')['facturaci√≥n_num'].mean().reset_index()
                fig_campaign_rev = px.bar(campaign_revenue,
                            x='tipo',
                            y='facturaci√≥n_num',
                            title='Ingresos Promedio por Tipo de Campa√±a',
                            color='tipo')
                fig_campaign_rev.update_layout(xaxis_title="Tipo de Campa√±a",
                             yaxis_title="Facturaci√≥n Promedio")
                st.plotly_chart(fig_campaign_rev, use_container_width=True)

                st.markdown("""
                <div style="background-color: #f8f9fa; padding: 15px; border-radius: 5px; border-left: 5px solid #1f77b4;">
                <strong>Insights de Ingresos:</strong>
                <ul>
                <li>Las campa√±as de social media, podcast y email generan los ingresos promedio m√°s altos, superando los 500k.</li>
                <li>Las campa√±as de webinar generar ingresos ligeramente inferiores a las otras tres principales.</li>
                <li>Las campa√±as de eventos tienen una facturaci√≥n promedio significativamente menor.</li>
                </ul>
                </div>
                """, unsafe_allow_html=True)

            with col2:
                # Distribuci√≥n de duraci√≥n por tipo de campa√±a
                df_filtered = df[~df['tipo'].isin(['B2B', 'sin datos'])]
                fig_duration = px.box(df_filtered,
                        x='tipo',
                        y='duracion_num',
                        color='tipo', 
                        title='Distribuci√≥n de Duraci√≥n por Tipo de Campa√±a')
                fig_duration.update_layout(xaxis_title="Tipo de Campa√±a",
                             yaxis_title="Duraci√≥n (d√≠as)")
                st.plotly_chart(fig_duration, use_container_width=True)

                st.markdown("""
                <div style="background-color: #f8f9fa; padding: 15px; border-radius: 5px; border-left: 5px solid #1f77b4;">
                <strong>Insights de Duraci√≥n:</strong>
                <ul>
                <li>Todas las campa√±as tienen una distribuci√≥n de duraci√≥n similar.</li>
                <li>No se observa una diferencia clara de duraci√≥n entre los tipos de campa√±a.</li>
                </ul>
                </div>
                """, unsafe_allow_html=True)
    with tab3:
        st.markdown("""
        <div class="data-card">
            <h3>3. An√°lisis de Rendimiento y ROI</h3>
            <p>Evaluaci√≥n de la relaci√≥n entre inversi√≥n, ROI y rendimiento general.</p>
        </div>
        """, unsafe_allow_html=True)
        
        col1, col2 = st.columns(2)
        
        with col1:
            # Scatter plot de Inversi√≥n vs ROI
            fig_inv_roi = px.scatter(df, 
                       x='inversi√≥n_num',
                       y='roi_num',
                       color='canal',
                       title='Relaci√≥n entre Inversi√≥n y ROI')
            st.plotly_chart(fig_inv_roi, use_container_width=True)
            
            st.markdown("""
            <div style="background-color: #f8f9fa; padding: 15px; border-radius: 5px; border-left: 5px solid #1f77b4;">
            <strong>Insights Inversi√≥n vs ROI:</strong>
            <ul>
            <li>No existe una correlaci√≥n fuerte entre el nivel de inversi√≥n y el ROI obtenido</li>
            <li>Las campa√±as de menor inversi√≥n muestran mayor variabilidad en el ROI</li>
            <li>Se identifica un punto √≥ptimo de inversi√≥n entre 0.3-0.5M</li>
            <li>Los diferentes canales muestran patrones similares de ROI</li>
            </ul>
            </div>
            """, unsafe_allow_html=True)
            
        with col2:
            # Histograma de ROI
            fig_roi_hist = px.histogram(df, 
                          x='roi_num',
                          title='Distribuci√≥n del ROI',
                          nbins=30)
            st.plotly_chart(fig_roi_hist, use_container_width=True)

            st.markdown("""
            <div style="background-color: #f8f9fa; padding: 15px; border-radius: 5px; border-left: 5px solid #1f77b4;">
            <strong>Insights Distribuci√≥n ROI:</strong>
            <ul>
            <li>La distribuci√≥n del ROI muestra una forma aproximadamente normal</li>
            <li>La mayor√≠a de campa√±as tienen un ROI entre 0.4 y 0.7</li>
            <li>Hay pocas campa√±as con ROI extremadamente alto (>0.8) o bajo (<0.2)</li>
            <li>El ROI promedio se sit√∫a alrededor de 0.54</li>
            </ul>
            </div>
            """, unsafe_allow_html=True)

    with tab4:
        st.markdown("""
        <div class="data-card">
            <h3>4. An√°lisis de Patrones Temporales</h3>
            <p>Identificaci√≥n de estacionalidad y tendencias temporales.</p>
        </div>
        """, unsafe_allow_html=True)
        
        col1, col2 = st.columns(2)
        
        with col1:
            # ROI promedio por mes
            monthly_roi = df.groupby('mes')['roi_num'].mean().reset_index()
            fig_monthly_roi = px.line(monthly_roi,
                                    x='mes',
                                    y='roi_num',
                                    title='ROI Promedio por Mes',
                                    markers=True)
            st.plotly_chart(fig_monthly_roi, use_container_width=True)
            
            st.markdown("""
            <div style="background-color: #f8f9fa; padding: 15px; border-radius: 5px; border-left: 5px solid #1f77b4;">
            <strong>Insights de Estacionalidad:</strong>
            <ul>
            <li>Se identifican 4 picos claros de ROI en los meses 1, 3, 9 y 12</li>
            <li>El mes de julio (7) muestra el ROI m√°s bajo del a√±o</li>
            <li>Existe un patr√≥n estacional trimestral consistente</li>
            <li>Los picos coinciden con cierres de trimestre fiscal</li>
            </ul>
            </div>
            """, unsafe_allow_html=True)
            
        with col2:
            # Duraci√≥n vs Facturaci√≥n
            fig_dur_fact = px.scatter(df,
                                    x='duracion_num',
                                    y='facturaci√≥n_num',
                                    color='canal',
                                    title='Duraci√≥n vs Facturaci√≥n')
            st.plotly_chart(fig_dur_fact, use_container_width=True)
            
            st.markdown("""
            <div style="background-color: #f8f9fa; padding: 15px; border-radius: 5px; border-left: 5px solid #1f77b4;">
            <strong>Insights de Duraci√≥n vs Facturaci√≥n:</strong>
            <ul>
            <li>Campa√±as m√°s largas no necesariamente generan mayor facturaci√≥n</li>
            <li>La duraci√≥n √≥ptima se encuentra entre 300-500 d√≠as</li>
            <li>No hay diferencias significativas entre canales</li>
            <li>Las campa√±as cortas muestran mayor variabilidad en facturaci√≥n</li>
            </ul>
            </div>
            """, unsafe_allow_html=True)


# --- Insights y Recomendaciones ---
elif section == "Insights y Recomendaciones":
    # Custom CSS para mantener consistencia con introducci√≥n
    st.markdown("""
    <style>
    .card {
        background-color: white;
        padding: 1.5em;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.2);
        margin: 1em 0;
        transition: transform 0.3s ease;
        border: 1px solid #e0e0e0;
    }
    
    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 16px rgba(0,0,0,0.25);
    }
    
    .metric-card {
        background-color: #f8f9fa;
        padding: 1.5em;
        border-radius: 10px;
        text-align: center;
        border-left: 6px solid #1f77b4;
        margin: 0.5em;
        box-shadow: 0 3px 8px rgba(0,0,0,0.15);
    }
    
    .section-title {
        font-size: 2.5em;
        color: #1f77b4;
        text-align: center;
        margin: 2em 0 1em 0;
        padding-bottom: 0.5em;
        border-bottom: 3px solid #ddd;
    }
    
    .process-step {
        background-color: white;
        padding: 1.2em;
        border-radius: 8px;
        margin: 0.5em 0;
        display: flex;
        align-items: center;
        box-shadow: 0 3px 6px rgba(0,0,0,0.1);
        border: 1px solid #dee2e6;
    }
    
    .animated {
        animation: fadeIn 1s ease;
    }
    
    @keyframes fadeIn {
        from {opacity: 0;}
        to {opacity: 1;}
    }
    </style>
    """, unsafe_allow_html=True)

    # T√≠tulo principal
    st.markdown('<h1 class="section-title animated">üìä Insights y Recomendaciones</h1>', unsafe_allow_html=True)

    # M√©tricas principales
    col1, col2, col3, col4 = st.columns(4)
    metrics = [
        {"icon": "üìà", "value": "0.54", "label": "ROI Promedio", "delta": "+15%"},
        {"icon": "üéØ", "value": "Referral", "label": "Mejor Canal", "delta": "0.575 ROI"},
        {"icon": "‚è±Ô∏è", "value": "400 d√≠as", "label": "Duraci√≥n √ìptima", "delta": "+25%"},
        {"icon": "üí°", "value": "20%", "label": "Potencial Mejora", "delta": "proyectado"}
    ]

    for col, metric in zip([col1, col2, col3, col4], metrics):
        with col:
            st.markdown(f"""
            <div class="metric-card animated">
                <div style="font-size: 2em">{metric['icon']}</div>
                <div class="metric-value">{metric['value']}</div>
                <div class="metric-label">{metric['label']}</div>
                <div style="color: #28a745; font-size: 0.9em">‚ñ≤ {metric['delta']}</div>
            </div>
            """, unsafe_allow_html=True)

    # Principales hallazgos
    st.markdown('<h2 class="section-title">üîç Insights</h2>', unsafe_allow_html=True)
    
    col1, col2 = st.columns(2)
    
    findings = [
        {
            "icon": "üìä", 
            "title": "Canales", 
            "desc": "Referral lidera ROI con 57.5%, superando por 25% el promedio. "
            "Las campa√±as de referidos muestran mayor retenci√≥n y valor del cliente a largo plazo."
        },
        {
            "icon": "üí∞", 
            "title": "Inversi√≥n", 
            "desc": "Punto √≥ptimo de inversi√≥n identificado entre 0.3-0.5M con ROI promedio de 0.54. "
            "Inversiones mayores muestran rendimientos decrecientes."
        },
        {
            "icon": "üìà", 
            "title": "Conversi√≥n", 
            "desc": "Email destaca con tasa de conversi√≥n 35% superior al promedio. "
            "Especialmente efectivo en retenci√≥n de clientes y reactivaci√≥n."
        },
        {
            "icon": "üïí", 
            "title": "Temporalidad", 
            "desc": "4 picos estacionales identificados en Q1,Q2,Q3,Q4 con m√°ximos en marzo y septiembre. "
            "Las campa√±as alineadas muestran 40% mejor rendimiento."
        }
    ]
    
    for i, finding in enumerate(findings):
        with col1 if i < 2 else col2:
            st.markdown(f"""
            <div class="card animated" style="height: 180px; overflow: hidden;">
                <h3>{finding['icon']} {finding['title']}</h3>
                <p>{finding['desc']}</p>
            </div>
            """, unsafe_allow_html=True)

    # Plan de acci√≥n basado en insights
    st.markdown('<h2 class="section-title">üéØ Recomendaciones</h2>', unsafe_allow_html=True)

    col1, col2 = st.columns(2)
    with col1:
        st.markdown("""
        <div class="process-step">
            <div style="font-size: 1.5em; margin-right: 1em">‚ö°</div>
            <div>
                <h4>Potenciar Canal Referral</h4>
                <p>Especialmente con campa√±as de bajo coste y alta segmentaci√≥n como Email Marketing.</p>
                
        </div>
        """, unsafe_allow_html=True)

    with col2:
        st.markdown("""
        <div class="process-step">
            <div style="font-size: 1.5em; margin-right: 1em">üéØ</div>
            <div>
                <h4>Ajuste del ROI objetivo</h4>
                <p>Establecer un ROI objetivo m√≠nimo de 0.6. Ajustar campa√±as que est√©n por debajo.</p>
        
        </div>
        """, unsafe_allow_html=True)

    col1, col2 = st.columns(2)
    with col1:
        st.markdown("""
        <div class="process-step">
            <div style="font-size: 1.5em; margin-right: 1em">‚è±Ô∏è</div>
            <div>
                <h4>Ajuste Temporal</h4>
                <p>Priorizar meses pico (marzo y septiembre). Optimizar duraci√≥n a 400 d√≠as.</p>
        
        </div>
        """, unsafe_allow_html=True)

    with col2:
        st.markdown("""
        <div class="process-step">
            <div style="font-size: 1.5em; margin-right: 1em">üí∞</div>
            <div>
                <h4>Inversi√≥n √ìptima</h4>
                <p>Mantener rango 0.3-0.5M. Evitar inversiones excesivas.</p>
        
        </div>
        """, unsafe_allow_html=True)


# Footer
st.markdown("---")
st.markdown("**Proyecto desarrollado para Upgrade Hub por Carla Molina - 2025**")